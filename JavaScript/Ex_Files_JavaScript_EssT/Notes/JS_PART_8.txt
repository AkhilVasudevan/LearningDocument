---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
                                Functions and Methods
---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------

Introduction:
    The term function is typically used to refer to as a function that sits on itself wherears 
        a method is a function that sits inside an object and acts on that object.
    
Function Declaration:
    function function_name(parameters,...)
    {
        <function_statement>
        return <value>;
    }

    Calling: 
        function_name(parematers,...);

    In function declaration method, Function with same name is declared, it will accidentally over-ride the function.
    It is possible to have default value for the parameters.

Function Expression:
    const <variable>=function(parameters,...)
    {
        <function_statement>
        return <value>;
    }

    Calling:
        <variable>(parameters,....);

    In function expression, it is not possible to over-ride the function.
    Function expressions are not hoisted.
    It is not possible to have a function declaration name same as function expression name.
    It will return expresion code, when we use only variable name and not mentioning it as function.
    It is possible to have default value for the parameters.

Immediately Invoked Function Expression(IIFE):
    Enclosing an anonymous function inside an circle bracket and then placing another set of parantheses outside.
    This function will run immediately as soon as the browser encounters it.
    It is hoisted in the global level, so it will always refer "this" from a global variable.

    (function(){<function_statement>})();

Arrow Function:
    It is compact alternative to traditional function expression, but is limited and can't be used in all situations.
    Instead of mentioning function explicitly, => has been used after parameters.
    It is a simpler way of writing anonymous functions.
    It can be called only after it has been declared.
    Funcion inside object cannot be of type arrow function.
    Arrow function will give the "this" variable's value of closest available scope.

Callback:
    One way of handling the sequence of calling a function is called callback.
    Running the function inside another function instead of calling to that function is what callback is.
    To do that pass the function variable while calling the function.
    By using callback, we can pass in exactly the function we wnat into the another function.
    A callback function is a function passed into another function as an argument, which is then invoked inside 
        the outer function to complete some kind of routine or action.

Conditional if..else Statement:
    if(condition)
    {statement1}
    else
    {statement2}

    condition?statement1:statement2

    undefined,null,false will always returns false for condition.

Using map() array method:
    It is heavily used when working with complex lists of data.
    It creates a new typed array with the results of calling a provided function on every element in this typed array.

